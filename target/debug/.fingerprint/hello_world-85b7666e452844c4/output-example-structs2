{"message":"`main` function not found in crate `structs2`","code":{"code":"E0601","explanation":"No `main` function was found in a binary crate.\n\nTo fix this error, add a `main` function:\n\n```\nfn main() {\n    // Your program will start here.\n    println!(\"Hello world!\");\n}\n```\n\nIf you don't know the basics of Rust, you can look at the\n[Rust Book][rust-book] to get started.\n\n[rust-book]: https://doc.rust-lang.org/book/\n"},"level":"error","spans":[{"file_name":"examples/structs2.rs","byte_start":90,"byte_end":1343,"line_start":5,"line_end":49,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"#[derive(Debug)]","highlight_start":1,"highlight_end":17},{"text":"struct Order {","highlight_start":1,"highlight_end":15},{"text":"    name: String,","highlight_start":1,"highlight_end":18},{"text":"    year: u32,","highlight_start":1,"highlight_end":15},{"text":"    made_by_phone: bool,","highlight_start":1,"highlight_end":25},{"text":"    made_by_mobile: bool,","highlight_start":1,"highlight_end":26},{"text":"    made_by_email: bool,","highlight_start":1,"highlight_end":25},{"text":"    item_number: u32,","highlight_start":1,"highlight_end":22},{"text":"    count: u32,","highlight_start":1,"highlight_end":16},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn create_order_template() -> Order {","highlight_start":1,"highlight_end":38},{"text":"    Order {","highlight_start":1,"highlight_end":12},{"text":"        name: String::from(\"Bob\"),","highlight_start":1,"highlight_end":35},{"text":"        year: 2019,","highlight_start":1,"highlight_end":20},{"text":"        made_by_phone: false,","highlight_start":1,"highlight_end":30},{"text":"        made_by_mobile: false,","highlight_start":1,"highlight_end":31},{"text":"        made_by_email: true,","highlight_start":1,"highlight_end":29},{"text":"        item_number: 123,","highlight_start":1,"highlight_end":26},{"text":"        count: 0,","highlight_start":1,"highlight_end":18},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"#[cfg(test)]","highlight_start":1,"highlight_end":13},{"text":"mod tests {","highlight_start":1,"highlight_end":12},{"text":"    use super::*;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn your_order() {","highlight_start":1,"highlight_end":22},{"text":"        let order_template = create_order_template();","highlight_start":1,"highlight_end":54},{"text":"        // TODO: Create your own order using the update syntax and template above!","highlight_start":1,"highlight_end":83},{"text":"        let your_order = Order {","highlight_start":1,"highlight_end":33},{"text":"            name: String::from(\"Hacker in Rust\"),","highlight_start":1,"highlight_end":50},{"text":"            count: 1,","highlight_start":1,"highlight_end":22},{"text":"            ..order_template","highlight_start":1,"highlight_end":29},{"text":"        };","highlight_start":1,"highlight_end":11},{"text":"        assert_eq!(your_order.name, \"Hacker in Rust\");","highlight_start":1,"highlight_end":55},{"text":"        assert_eq!(your_order.year, order_template.year);","highlight_start":1,"highlight_end":58},{"text":"        assert_eq!(your_order.made_by_phone, order_template.made_by_phone);","highlight_start":1,"highlight_end":76},{"text":"        assert_eq!(your_order.made_by_mobile, order_template.made_by_mobile);","highlight_start":1,"highlight_end":78},{"text":"        assert_eq!(your_order.made_by_email, order_template.made_by_email);","highlight_start":1,"highlight_end":76},{"text":"        assert_eq!(your_order.item_number, order_template.item_number);","highlight_start":1,"highlight_end":72},{"text":"        assert_eq!(your_order.count, 1);","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":"consider adding a `main` function to `examples/structs2.rs`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0601]\u001b[0m\u001b[0m\u001b[1m: `main` function not found in crate `structs2`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mexamples/structs2.rs:5:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Debug)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct Order {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    name: String,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    year: u32,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mconsider adding a `main` function to `examples/structs2.rs`\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0601`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0601`.\u001b[0m\n"}
